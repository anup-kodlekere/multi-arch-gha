name: Build Multi-arch Image using matrix

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
          ARCH: [linux/ppc64le, linux/amd64]
    
    env:
      TAG: "${{ matrix.ARCH }} === 'linux/ppc64le' && 'ppc64le' || 'amd64'"
    
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
 

      - name: Build and Push image
        run: |
        
          echo ${{ matrix.ARCH }}

          if [[ "${{ matrix.ARCH }}" == "linux/ppc64le" ]]; then
            export TAG=ppc64le
            echo "TAG=ppc64le" >> $GITHUB_ENV
          else
            export TAG=amd64
            echo "TAG=amd64" >> $GITHUB_ENV
          fi

          echo "Building for $TAG"

          docker buildx build --load --platform ${{ matrix.ARCH }} --tag multi-arch-gha:latest-${TAG} -f Dockerfile ..
          docker image ls
          docker inspect multi-arch-gha:latest-${TAG} | grep Arch
          

      - name: Save image
        run: |
          docker save multi-arch-gha:latest-${TAG} > /tmp/img-${TAG}.tar
          ls /tmp/
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: mag-img-${{ env.TAG }}
          path: /tmp/img-${{ env.TAG }}.tar
          
  multi-arch-manifest:
    needs: build
    name: Create manifest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    runs-on: ubuntu-latest
    steps:
      - name: Enable insecure registry
        run: |
        
          cat << EOF > ~/.docker/config.json 
          {
          "insecure-registries" : ["127.0.0.1:5000"]
          }
          EOF
          
          sudo systemctl daemon-reload
          sudo systemctl reload docker
          sudo systemctl restart docker
    
      - name: Download PPC Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: mag-img-ppc64le
          path: /tmp/img-ppc64le
          
      - name: Download AMD Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: mag-img-amd64
          path: /tmp/img-amd64
      
      - name: Load image into docker daemon
        run: |
          ls -lha /tmp/img-ppc64le/
          
          docker load --input /tmp/img-amd64/img-amd64.tar
          docker load --input /tmp/img-ppc64le/img-ppc64le.tar
          docker image ls -a
          
          docker inspect multi-arch-gha:latest-ppc64le | grep Arch
          docker inspect multi-arch-gha:latest-amd64 | grep Arch
          
          
          echo "Testing registry"
          status_code=$(curl -I -k -s localhost:5000/ | head -n 1 | cut -d ' ' -f 2)
          if [[ "$status_code" == "200" ]]; then
              echo "Registry is up"
          fi

          
      - name: Create manifest
        run: |
          docker manifest create --insecure localhost:5000/kodlekereanup/multi-arch-gha:latest --amend localhost:5000/multi-arch-gha:latest-ppc64le --amend localhost:5000/multi-arch-gha:latest-amd64 
          docker manifest inspect localhost:5000/kodlekereanup/multi-arch-gha:latest
          
    
      
